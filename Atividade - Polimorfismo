======= Atividade 1 ======
class Veiculo {
    public void mover() {
        System.out.println("O veículo está se movendo");
    }
}

class Carro extends Veiculo {
    @Override
    public void mover() {
        System.out.println("O carro está dirigindo");
    }
}

class Bicicleta extends Veiculo {
    @Override
    public void mover() {
        System.out.println("A bicicleta está pedalando");
    }
}

public class TesteVeiculo {
    public static void main(String[] args) {
        Veiculo meuCarro = new Carro();
        Veiculo minhaBicicleta = new Bicicleta();

        meuCarro.mover();       // Saída: O carro está dirigindo
        minhaBicicleta.mover(); // Saída: A bicicleta está pedalando
    }
}

=====A sobrescrita de métodos permite que cada classe filha da mesma hierarquia faça a mesma ação de um jeito diferente.
No exemplo dos veículos: todos são `Veiculo`, mas quando chamamos `mover()`, o `Carro` dirige e a `Bicicleta` pedala. 
Ou seja, você pode tratar todos como `Veiculo`, mas cada um faz a coisa do seu jeito. Isso deixa o código mais flexível e organizado, sem precisar criar métodos diferentes para cada tipo.====


